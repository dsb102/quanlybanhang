/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import model.OrderDetail;
import model.Orders;
import service.*;
import service.impl.*;

import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.util.List;

/**
 *
 * @author hi
 */
public class ListOrder extends javax.swing.JFrame {

    /**
     * Creates new form ListOrder1
     */

    private OrderService orderService = new OrderServiceImpl();

    private CustomerService customerService = new CustomerServiceImpl();

    private EmployeeService employeeService = new EmployeeServiceImpl();

    private OrderDetailService orderDetailService = new OrderDetailServiceImpl();

    private ProductService productService = new ProductServiceImpl();

    public ListOrder() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnListOrderBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        pnListbill = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListBill = new javax.swing.JTable();
        txfListBill = new javax.swing.JTextField();
        btnListOrderDelete = new javax.swing.JButton();
        pnListOrder = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListOrder = new javax.swing.JTable();
        jTextField20 = new javax.swing.JTextField();
        btnOrderDelete = new javax.swing.JButton();
        pnOrder = new javax.swing.JPanel();
        txfOrder = new javax.swing.JTextField();
        lbOrderIdCustomer = new javax.swing.JLabel();
        txfOrderIdCustomer = new javax.swing.JTextField();
        lbOrderIdEmployee = new javax.swing.JLabel();
        txfOrderIdEmployee = new javax.swing.JTextField();
        btnAddToBill = new javax.swing.JButton();
        btnListOrderUpdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txfOrderIdProduct2 = new javax.swing.JTextField();
        pnBill = new javax.swing.JPanel();
        txfPayment = new javax.swing.JTextField();
        btnPayment = new javax.swing.JButton();
        pnAddOrderDetail = new javax.swing.JPanel();
        txfAddOrderDetail = new javax.swing.JTextField();
        lbIDProduct1 = new javax.swing.JLabel();
        txfOrderIdProduct1 = new javax.swing.JTextField();
        txfOrderIdCustomer1 = new javax.swing.JTextField();
        lbOrderIdCustomer1 = new javax.swing.JLabel();
        lbOrderIdEmployee1 = new javax.swing.JLabel();
        txfOrderIdEmployee1 = new javax.swing.JTextField();
        lbOrderQuantity1 = new javax.swing.JLabel();
        txfOrderDate1 = new javax.swing.JTextField();
        txfOrderQuantity1 = new javax.swing.JTextField();
        lbIdOrder = new javax.swing.JLabel();
        btnAddToListOrder = new javax.swing.JButton();
        btnOrderUpdate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txfOrderIdProduct3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnListOrderBack.setText("Quay lại");
        btnListOrderBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListOrderBackActionPerformed(evt);
            }
        });

        tblListBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã đơn hàng", "Tên NV", "Tên KH", "Tổng giá", "Ngày tạo", "Trạng thái"
            }
        ));
        tblListBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListBillMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblListBillMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tblListBill);

        txfListBill.setEditable(false);
        txfListBill.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txfListBill.setText("Danh sách đơn hàng");

        btnListOrderDelete.setText("Xóa");
        btnListOrderDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListOrderDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnListbillLayout = new javax.swing.GroupLayout(pnListbill);
        pnListbill.setLayout(pnListbillLayout);
        pnListbillLayout.setHorizontalGroup(
            pnListbillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnListbillLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnListbillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
                    .addComponent(txfListBill)
                    .addGroup(pnListbillLayout.createSequentialGroup()
                        .addComponent(btnListOrderDelete)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnListbillLayout.setVerticalGroup(
            pnListbillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnListbillLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnListOrderDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfListBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblListOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã chi tiết đơn hàng", "Mã SP", "Mã đơn hàng", "Tên SP", "Số lượng", "Đơn giá"
            }
        ));
        jScrollPane2.setViewportView(tblListOrder);

        jTextField20.setEditable(false);
        jTextField20.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField20.setText("Chi tiết đơn hàng");

        btnOrderDelete.setText("Xóa");

        javax.swing.GroupLayout pnListOrderLayout = new javax.swing.GroupLayout(pnListOrder);
        pnListOrder.setLayout(pnListOrderLayout);
        pnListOrderLayout.setHorizontalGroup(
            pnListOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnListOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnListOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                    .addComponent(jTextField20)
                    .addGroup(pnListOrderLayout.createSequentialGroup()
                        .addComponent(btnOrderDelete)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnListOrderLayout.setVerticalGroup(
            pnListOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnListOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnOrderDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnListOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnListbill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnListbill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(pnListOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txfOrder.setEditable(false);
        txfOrder.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txfOrder.setText("Đặt hàng");

        lbOrderIdCustomer.setText("ID Khách hàng");

        lbOrderIdEmployee.setText("ID Nhân viên");

        btnAddToBill.setText("Thêm vào danh sách đơn hàng");
        btnAddToBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToBillActionPerformed(evt);
            }
        });

        btnListOrderUpdate.setText("Sửa");

        jLabel1.setText(" Mã đơn hàng");

        javax.swing.GroupLayout pnOrderLayout = new javax.swing.GroupLayout(pnOrder);
        pnOrder.setLayout(pnOrderLayout);
        pnOrderLayout.setHorizontalGroup(
            pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnOrderLayout.createSequentialGroup()
                .addGroup(pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfOrder)
                            .addGroup(pnOrderLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(38, 38, 38)
                                .addComponent(txfOrderIdProduct2))))
                    .addGroup(pnOrderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbOrderIdCustomer)
                            .addComponent(lbOrderIdEmployee))
                        .addGap(34, 34, 34)
                        .addGroup(pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfOrderIdEmployee, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txfOrderIdCustomer))))
                .addContainerGap())
            .addGroup(pnOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddToBill)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btnListOrderUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pnOrderLayout.setVerticalGroup(
            pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txfOrderIdProduct2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbOrderIdCustomer)
                    .addComponent(txfOrderIdCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txfOrderIdEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbOrderIdEmployee))
                .addGap(29, 29, 29)
                .addGroup(pnOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddToBill, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListOrderUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        txfPayment.setEditable(false);
        txfPayment.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txfPayment.setText("Thanh toán");
        txfPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfPaymentActionPerformed(evt);
            }
        });

        btnPayment.setText("Thanh toán");
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnBillLayout = new javax.swing.GroupLayout(pnBill);
        pnBill.setLayout(pnBillLayout);
        pnBillLayout.setHorizontalGroup(
            pnBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBillLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfPayment, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnBillLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );
        pnBillLayout.setVerticalGroup(
            pnBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBillLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btnPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        txfAddOrderDetail.setEditable(false);
        txfAddOrderDetail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txfAddOrderDetail.setText("Thêm chi tiết đơn hàng");

        lbIDProduct1.setText("Mã SP");

        lbOrderIdCustomer1.setText("Mã KH");

        lbOrderIdEmployee1.setText("Mã NV");

        lbOrderQuantity1.setText("Số lượng");

        lbIdOrder.setText("Mã đơn hàng");

        btnAddToListOrder.setText("Thêm vào đơn hàng");

        btnOrderUpdate.setText("Sửa");

        jLabel2.setText("Mã chi tiết đơn hàng");

        javax.swing.GroupLayout pnAddOrderDetailLayout = new javax.swing.GroupLayout(pnAddOrderDetail);
        pnAddOrderDetail.setLayout(pnAddOrderDetailLayout);
        pnAddOrderDetailLayout.setHorizontalGroup(
            pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnAddOrderDetailLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txfAddOrderDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
            .addGroup(pnAddOrderDetailLayout.createSequentialGroup()
                .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnAddOrderDetailLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbOrderIdEmployee1)
                            .addComponent(lbOrderQuantity1)
                            .addComponent(lbOrderIdCustomer1)
                            .addComponent(lbIDProduct1)
                            .addComponent(lbIdOrder)
                            .addComponent(jLabel2))
                        .addGap(58, 58, 58)
                        .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txfOrderDate1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                            .addComponent(txfOrderQuantity1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfOrderIdEmployee1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfOrderIdProduct1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfOrderIdCustomer1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfOrderIdProduct3, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(pnAddOrderDetailLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(btnAddToListOrder)
                        .addGap(18, 18, 18)
                        .addComponent(btnOrderUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        pnAddOrderDetailLayout.setVerticalGroup(
            pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAddOrderDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfAddOrderDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnAddOrderDetailLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2))
                    .addGroup(pnAddOrderDetailLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txfOrderIdProduct3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfOrderIdProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIDProduct1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfOrderIdCustomer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIdOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfOrderIdEmployee1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbOrderIdCustomer1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfOrderQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbOrderIdEmployee1))
                .addGap(18, 18, 18)
                .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbOrderQuantity1)
                    .addComponent(txfOrderDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnAddOrderDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddToListOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(btnOrderUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnListOrderBack))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(pnAddOrderDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(428, 428, 428))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(pnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnListOrderBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(pnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(133, 133, 133)
                                .addComponent(pnAddOrderDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pnBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 25, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateListOrderDetail(ActionEvent evt) {
        OrderDetail order = new OrderDetail();
        String idDetail = txfOrderIdProduct3.getText();
        String idProduct = txfOrderIdProduct.getText();
        String idOrder = txfOrderIdCustomer1.getText();
        String idCustomer = txfOrderIdCustomer.getText();
        String idEmployee = txfOrderIdEmployee.getText();
        String quantity = txfOrderDate1.getText();
        if (isNumber(idDetail, idCustomer, idEmployee, idProduct, idOrder, quantity)) {
            int idD = Integer.parseInt(idDetail);
            int idP = Integer.parseInt(idProduct);
            int idO = Integer.parseInt(idOrder);
            int idC = Integer.parseInt(idCustomer);
            int idE = Integer.parseInt(idEmployee);
            int quan = Integer.parseInt(quantity);
            if (orderDetailService.findById(idD) == null) {
                // todo: show không tìm thấy id detail
            } else if (customerService.getCustomerById(idC) == null) {
                // todo: show không tìm thấy id customer
            } else if (employeeService.findEmployeeById(idE) == null) {
                // todo: show không tìm thấy id employee
            } else if (productService.findById(idP) == null) {
                // todo: show không tìm thấy id sản phẩm
            } else if (orderService.findById(idO) == null) {
                // todo: show không tìm thấy id order
            } else if (productService.findById(idP).getQuantity() < (quan - orderDetailService.countQuantityByDetailAndProductId(idO, idP))) {
                // todo: show không đủ số lượng
            } else {
                order = new OrderDetail(idP, idO, idC, idE, quan);
                boolean success = orderDetailService.createOrderDetail(order);
                productService.updateQuantity(idP, productService.findById(idP).getQuantity() + (quan - orderDetailService.countQuantityByDetailAndProductId(idO, idP)));
                if (success) {
                    // todo: show them don hang thanh cong
                } else {
                    // todo: show them don hang that bai
                }

            }
        } else {
            // todo: show wrong format
        }
        refreshListOrder();
    }

    private void addToListOrderDetail(ActionEvent evt) {
        OrderDetail order = new OrderDetail();
        String idProduct = txfOrderIdProduct.getText();
        String idOrder = txfOrderIdCustomer1.getText();
        String idCustomer = txfOrderIdCustomer.getText();
        String idEmployee = txfOrderIdEmployee.getText();
        String quantity = txfOrderDate1.getText();
        if (isNumber(idCustomer, idEmployee, idProduct, idOrder, quantity)) {
            int idP = Integer.parseInt(idProduct);
            int idO = Integer.parseInt(idOrder);
            int idC = Integer.parseInt(idCustomer);
            int idE = Integer.parseInt(idEmployee);
            int quan = Integer.parseInt(quantity);
            if (customerService.getCustomerById(idC) == null) {
                // todo: show không tìm thấy id customer
            } else if (employeeService.findEmployeeById(idE) == null) {
                // todo: show không tìm thấy id employee
            } else if (productService.findById(idP) == null) {
                // todo: show không tìm thấy id sản phẩm
            } else if (orderService.findById(idO) == null) {
                // todo: show không tìm thấy id order
            } else if (productService.findById(idP).getQuantity() < quan) {
                int conLai = productService.findById(idP).getQuantity();
                String name = productService.findById(idP).getProductName();
                // todo: show chỉ còn {conLai} {name} : <chỉ còn lại 5 cái áo>
            } else {
                order = new OrderDetail(idP, idO, idC, idE, quan);
                boolean success = orderDetailService.createOrderDetail(order);
                if (success) {
                    System.out.println("thanh cong");
                    // todo: show them don hang thanh cong
                } else {
                    System.out.println("that bai");
                    // todo: show them don hang that bai
                }

            }
        } else {
            // todo: show wrong format
        }
        refreshListOrder();
    }

    private void refreshListBill() {
        DefaultTableModel model = new DefaultTableModel();
        for (String s : new String [] {
                "STT", "Mã đơn hàng", "Tên NV", "Tên KH", "Tổng giá", "Ngày tạo", "Trạng thái"
        }) {
            model.addColumn(s);
        }

        List<Orders> orders = orderService.getAllOrder();

        for (Orders order : orders) {
            model.addRow(new Object[] {
                    orders.indexOf(order) + 1,
                    order.getOrderId(),
                    order.getEmployeeId() + " - " + employeeService.findEmployeeById(order.getEmployeeId()).getEmployeeName(),
                    order.getCustomerId() + " - " + customerService.getCustomerById(order.getCustomerId()).getCustomerName(),
                    order.getTotalPrice(),
                    order.getOrderDate(),
                    order.isPayment() ? "Đã thanh toán" : "Chưa thanh toán"
            });
        }

        tblListBill.setModel(model);
        jScrollPane1.setViewportView(tblListBill);
    }

    private void refreshListOrder() {
        int selectedRow = tblListBill.getSelectedRow();
//        if (selectedRow)
        Integer value = (Integer) tblListBill.getValueAt(selectedRow, 1);

        List<OrderDetail> orderDetails = orderDetailService.findAllByOrderId(value);

        DefaultTableModel model = new DefaultTableModel();

        for (String s : new String [] {
                "STT", "Mã chi tiết đơn hàng", "Mã SP", "Mã đơn hàng", "Tên SP", "Số lượng", "Đơn giá"
        }) {
            model.addColumn(s);
        }

        for (OrderDetail orderDetail : orderDetails) {
            model.addRow(new Object[]{
                    orderDetails.indexOf(orderDetail),
                    orderDetail.getDetailId(),
                    orderDetail.getProductId(),
                    orderDetail.getOrderId(),
                    orderDetail.getProductId() + " - " + productService.findById(orderDetail.getProductId()).getProductName(),
                    orderDetail.getQuantity(),
                    orderDetail.getUnitPrice()
            });
        }

        tblListOrder.setModel(model);
        jScrollPane2.setViewportView(tblListOrder);
    }

    private void updateOrder(ActionEvent evt) {
        Orders order = new Orders();
        String idOrder = txfOrderIdProduct2.getText();
        String idCustomer = txfOrderIdCustomer.getText();
        String idEmployee = txfOrderIdEmployee.getText();
        if (isNumber(idCustomer, idEmployee, idOrder)) {
            int idO = Integer.parseInt(idOrder);
            int idC = Integer.parseInt(idCustomer);
            int idE = Integer.parseInt(idEmployee);
            if (customerService.getCustomerById(idC) == null) {
                // todo: show không tìm thấy id customer
            } else if (employeeService.findEmployeeById(idE) == null) {
                // todo: show không tìm thấy id employee
            } else if (orderService.findById(idO) == null) {
                // todo: show không tìm thấy id Order
            }else {
                order = new Orders(idO, idC, idE);
                boolean success = orderService.updateOrder(order);
                if (success) {
                    // todo: show them don hang thanh cong
                } else {
                    // todo: show them don hang that bai
                }

            }
        } else {
            // todo: show wrong format
        }
        refreshListBill();
    }

    private void addToBill(ActionEvent evt) {
        Orders order = new Orders();
//        String idProduct = txfOrderIdProduct.getText();
        String idCustomer = txfOrderIdCustomer.getText();
        String idEmployee = txfOrderIdEmployee.getText();
        if (isNumber(idCustomer, idEmployee)) {
            int idC = Integer.parseInt(idCustomer);
            int idE = Integer.parseInt(idEmployee);
            if (customerService.getCustomerById(idC) == null) {
                // todo: show không tìm thấy id customer
            } else if (employeeService.findEmployeeById(idE) == null) {
                // todo: show không tìm thấy id employee
            } else {
                order = new Orders(idC, idE);
                boolean success = orderService.createOrder(order);
                if (success) {
                    // todo: show them don hang thanh cong
                } else {
                    // todo: show them don hang that bai
                }

            }
        } else {
            // todo: show wrong format
        }
        refreshListBill();
    }

    private boolean notEmpty(String ...status) {
        for (String s : status) {
            if (s.isEmpty()) return false;
        }
        return true;
    }

    private boolean isNumber(String ...ss) {
        for (String s : ss) {
            if (!isNumber(s)) return false;
        }
        return true;
    }


    private boolean isNumber(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private void btnOrderDeleteActionPerformed(ActionEvent evt) {
        int selectedRow = tblListOrder.getSelectedRow();
        int detailId = (Integer) tblListOrder.getValueAt(selectedRow, 1);
        boolean removeSuccess = orderDetailService.deleteOrderDetail(detailId);
        if (removeSuccess) {
            int idP = (Integer) tblListOrder.getValueAt(selectedRow, 2);
            int quan = (Integer) tblListOrder.getValueAt(selectedRow, 5);
            productService.updateQuantity(idP, productService.findById(idP).getQuantity() + quan);
            // todo: show info success
        } else {
            // todo: show info fail
        }
        refreshListOrder();
    }

    private void btnListOrderDeleteActionPerformed(ActionEvent evt) {
        int selectedRow = tblListBill.getSelectedRow();
        boolean removeSuccess = orderService.removeOrder((Integer) tblListBill.getValueAt(selectedRow, 1));
        if (removeSuccess) {
            // todo: show info success
        } else {
            // todo: show đơn hàng đã thanh toán không được xóa
        }
        refreshListBill();
    }

    private void btnAddToBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToBillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddToBillActionPerformed

    private void tblListBillMouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = tblListBill.getSelectedRow();

        Integer value = (Integer) tblListBill.getValueAt(selectedRow, 1);

        List<OrderDetail> orderDetails = orderDetailService.findAllByOrderId(value);

        DefaultTableModel model = new DefaultTableModel();

        for (String s : new String [] {
                "STT", "Mã chi tiết đơn hàng", "Mã SP", "Mã đơn hàng", "Tên SP", "Số lượng", "Đơn giá"
        }) {
            model.addColumn(s);
        }

        for (OrderDetail orderDetail : orderDetails) {
            model.addRow(new Object[]{
                    orderDetails.indexOf(orderDetail),
                    orderDetail.getDetailId(),
                    orderDetail.getProductId(),
                    orderDetail.getOrderId(),
                    orderDetail.getProductId() + " - " + productService.findById(orderDetail.getProductId()).getProductName(),
                    orderDetail.getQuantity(),
                    orderDetail.getUnitPrice()
            });
        }

        tblListOrder.setModel(model);
        jScrollPane2.setViewportView(tblListOrder);

    }

    private void txfPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfPaymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfPaymentActionPerformed

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
        // TODO add your handling code here:
        Payment payment = new Payment();
        payment.setLocationRelativeTo(null);
        payment.setVisible(true);
    }//GEN-LAST:event_btnPaymentActionPerformed

    private void btnListOrderBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListOrderBackActionPerformed
        // TODO add your handling code here:
        Start start = new Start();
        start.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnListOrderBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToBill;
    private javax.swing.JButton btnAddToListOrder;
    private javax.swing.JButton btnListOrderBack;
    private javax.swing.JButton btnListOrderDelete;
    private javax.swing.JButton btnListOrderUpdate;
    private javax.swing.JButton btnOrderDelete;
    private javax.swing.JButton btnOrderUpdate;
    private javax.swing.JButton btnPayment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JLabel lbIDProduct1;
    private javax.swing.JLabel lbIdOrder;
    private javax.swing.JLabel lbOrderIdCustomer;
    private javax.swing.JLabel lbOrderIdCustomer1;
    private javax.swing.JLabel lbOrderIdEmployee;
    private javax.swing.JLabel lbOrderIdEmployee1;
    private javax.swing.JLabel lbOrderQuantity1;
    private javax.swing.JPanel pnAddOrderDetail;
    private javax.swing.JPanel pnBill;
    private javax.swing.JPanel pnListOrder;
    private javax.swing.JPanel pnListbill;
    private javax.swing.JPanel pnOrder;
    private javax.swing.JTable tblListBill;
    private javax.swing.JTable tblListOrder;
    private javax.swing.JTextField txfAddOrderDetail;
    private javax.swing.JTextField txfListBill;
    private javax.swing.JTextField txfOrder;
    private javax.swing.JTextField txfOrderDate1;
    private javax.swing.JTextField txfOrderIdCustomer;
    private javax.swing.JTextField txfOrderIdCustomer1;
    private javax.swing.JTextField txfOrderIdEmployee;
    private javax.swing.JTextField txfOrderIdEmployee1;
    private javax.swing.JTextField txfOrderIdProduct1;
    private javax.swing.JTextField txfOrderIdProduct2;
    private javax.swing.JTextField txfOrderIdProduct3;
    private javax.swing.JTextField txfOrderQuantity1;
    private javax.swing.JTextField txfPayment;
    // End of variables declaration//GEN-END:variables
}
